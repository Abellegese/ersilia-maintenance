name: Check if Model Repo Exists in Github

on:
  workflow_dispatch: #add input here
    inputs:
      model_id:
        description: Model ID
        required: true
        type: string

  schedule:
    - cron: '0 2 * * *'

env:
  MODEL_ID: ${{ github.event.inputs.model_id }}

jobs:
  publications-and-repositories:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v3.5.3

      - name: Add conda to system path
        run: echo $CONDA/bin >> $GITHUB_PATH

      - name: Source conda
        run: source $CONDA/etc/profile.d/conda.sh
        
      - name: Set Python to 3.10
        run:
         conda install -y python=3.10

      - name: Install dependencies
        run: |
          source activate
          conda init
          conda install git-lfs -c conda-forge
          git-lfs install
          conda install gh -c conda-forge

      - name: Install dependencies
        run: |
            source activate
            git clone https://github.com/reneeperpignan/ersilia-r.git
      
      - name: Install ersilia
        run: |
          source activate
          python --version
          echo "After conda init"
          conda init
          cd ersilia-r
          python -m pip install -e .
          
      - name: Inspect model
        run: |
          # might need source activate
          # ersilia inspect eos3b5e
          # check if model exists
          echo "Sample model id selected: $MODEL_ID"

          #search for substring 

          echo "model inspect:"
          echo $(ersilia inspect $MODEL_ID) | jq -r '.is_github_url_available'
          echo "Test condition:"
          echo [ "$(ersilia inspect $MODEL_ID | jq '.is_github_url_available')" = true ]
          
          #if [echo $(ersilia inspect $MODEL_ID) | jq '.is_github_url_available']; then
          if [ "$(ersilia inspect $MODEL_ID | jq '.is_github_url_available')" = true ]; then
            echo "Model Found"
          else
            echo"Model not found"
            ISSUE_TITLE="üö® Invalid GitHub link in model $MODEL_ID üö®"
            ISSUE_BODY="Hi! üëã The model [$MODEL_ID]($inspect_output) has an associated repository in the [ersilia-os](https://github.com/ersilia-os) organization profile, but the GitHub link retrieved by ersilia inspect is not valid. üôè Please ensure that the repository exists and is accessible."
            # Check if issue already exists
            if gh issue list --repo $REPO_OWNER/$REPO_NAME --search "$ISSUE_TITLE in:title" | grep -q "$ISSUE_TITLE"; then
                echo "Issue already exists for $MODEL_ID"
            else
                # Create new issue
                gh issue create --title "$ISSUE_TITLE" \
                                --body "$ISSUE_BODY" \
                                --label "maintenance" \
                                --repo $REPO_OWNER/$REPO_NAME
            fi
          fi
          # #end check if model exists
          # inspect_output=$(ersilia inspect $MODEL_ID)

          # if ! curl -Is "$inspect_output" | grep -q "HTTP/.*200"; then
          # # GitHub link is not valid, create issue
          # ISSUE_TITLE="üö® Invalid GitHub link in model $MODEL_ID üö®"
          # ISSUE_BODY="Hi! üëã The model [$MODEL_ID]($inspect_output) has an associated repository in the [ersilia-os](https://github.com/ersilia-os) organization profile, but the GitHub link retrieved by ersilia inspect is not valid. üôè Please ensure that the repository exists and is accessible."
          # fi

          # # Check if issue already exists
          # if gh issue list --repo $REPO_OWNER/$REPO_NAME --search "$ISSUE_TITLE in:title" | grep -q "$ISSUE_TITLE"; then
          #     echo "Issue already exists for $MODEL_ID"
          # else
          #     # Create new issue
          #     gh issue create --title "$ISSUE_TITLE" \
          #                     --body "$ISSUE_BODY" \
          #                     --label "maintenance" \
          #                     --repo $REPO_OWNER/$REPO_NAME
          # fi
          
      
          
          
